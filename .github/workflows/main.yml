name: deploy

on:
  push:
    branches:
      - master
      - main
      - infra/terraform

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install & build
        uses: actions/checkout@v2
      - run: npm install --frozen-lockfile
      - run: npm run build && npm install --production --ignore-scripts --prefer-offline

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: web/node-app/resumebuilderparser
          IMAGE_TAG: ${{github.sha}}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-ouput name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: web/node-app/resumebuilderparser
          IMAGE_TAG: ${{github.sha}}
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: infra/task-definitions/service.latest.json
          container-name: resumebuilderparser-image
          image: 807314995289.dkr.ecr.us-east-1.amazonaws.com/web/node-app/resumebuilderparser:$IMAGE_TAG

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{steps.task-def.outputs.task-definition}}
          service: web-service-node-app-prod
          cluster: web-cluster-node-app-prod
          wait-for-service-stability: true
